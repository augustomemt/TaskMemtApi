// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TaskMemtApi.Models.Context;

namespace TaskMemtApi.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20200306132147_TaskMigration01")]
    partial class TaskMigration01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskMemtApi.Models.Departament", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Leader");

                    b.Property<string>("NameDepartament");

                    b.HasKey("Id");

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("TaskMemtApi.Models.Employees", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DepartamentId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int?>("FirstPerformaceAreaId");

                    b.Property<string>("LastName");

                    b.Property<string>("Machine");

                    b.Property<string>("Privilege");

                    b.Property<string>("Registration");

                    b.Property<int?>("SecondPerformaceAreaId");

                    b.Property<int?>("ThirdPerformaceAreaId");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.HasIndex("FirstPerformaceAreaId");

                    b.HasIndex("SecondPerformaceAreaId");

                    b.HasIndex("ThirdPerformaceAreaId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TaskMemtApi.Models.PerformanceArea", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Area");

                    b.Property<string>("Subject");

                    b.Property<string>("specialty");

                    b.HasKey("Id");

                    b.ToTable("PerformanceAreas");
                });

            modelBuilder.Entity("TaskMemtApi.Models.Schedules", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ComplationDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("PerformanceAreaId");

                    b.Property<TimeSpan>("PlannedWorkload");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<string>("Request");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("TaskId");

                    b.Property<string>("WorkInsturction");

                    b.HasKey("Id");

                    b.HasIndex("PerformanceAreaId");

                    b.HasIndex("TaskId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("TaskMemtApi.Models.Task", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MyPropertyId");

                    b.Property<int?>("PerformaceAreaId");

                    b.HasKey("Id");

                    b.HasIndex("MyPropertyId");

                    b.HasIndex("PerformaceAreaId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskMemtApi.Models.Employees", b =>
                {
                    b.HasOne("TaskMemtApi.Models.Departament", "Departament")
                        .WithMany()
                        .HasForeignKey("DepartamentId");

                    b.HasOne("TaskMemtApi.Models.PerformanceArea", "FirstPerformaceArea")
                        .WithMany()
                        .HasForeignKey("FirstPerformaceAreaId");

                    b.HasOne("TaskMemtApi.Models.PerformanceArea", "SecondPerformaceArea")
                        .WithMany()
                        .HasForeignKey("SecondPerformaceAreaId");

                    b.HasOne("TaskMemtApi.Models.PerformanceArea", "ThirdPerformaceArea")
                        .WithMany()
                        .HasForeignKey("ThirdPerformaceAreaId");
                });

            modelBuilder.Entity("TaskMemtApi.Models.Schedules", b =>
                {
                    b.HasOne("TaskMemtApi.Models.PerformanceArea", "PerformanceArea")
                        .WithMany()
                        .HasForeignKey("PerformanceAreaId");

                    b.HasOne("TaskMemtApi.Models.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");
                });

            modelBuilder.Entity("TaskMemtApi.Models.Task", b =>
                {
                    b.HasOne("TaskMemtApi.Models.Task", "MyProperty")
                        .WithMany()
                        .HasForeignKey("MyPropertyId");

                    b.HasOne("TaskMemtApi.Models.PerformanceArea", "PerformaceArea")
                        .WithMany()
                        .HasForeignKey("PerformaceAreaId");
                });
#pragma warning restore 612, 618
        }
    }
}
